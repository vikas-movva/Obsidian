{"path":".obsidian/plugins/text-extractor/cache/6e60827241b489e4354e7f9930f1695e.json","text":"DATA MODELING USING THE ENTITY-RELATIONSHIP (ER) MODEL CHAPTER OUTLINE • OVERVIEW OF DATABASE DESIGN PROCESS • EXAMPLE DATABASE APPLICATION (COMPANY) • ER MODEL CONCEPTS • ENTITIES AND ATTRIBUTES • ENTITY TYPES, VALUE SETS, AND KEY ATTRIBUTES • RELATIONSHIPS AND RELATIONSHIP TYPES • WEAK ENTITY TYPES • ROLES AND ATTRIBUTES IN RELATIONSHIP TYPES • ER DIAGRAMS - NOTATION • ER DIAGRAM FOR COMPANY SCHEMA • RELATIONSHIPS OF HIGHER DEGREE OVERVIEW OF DATABASE DESIGN PROCESS • TWO MAIN ACTIVITIES: • DATABASE DESIGN • APPLICATIONS DESIGN • FOCUS IN THIS CHAPTER ON CONCEPTUAL DATABASE DESIGN • TO DESIGN THE CONCEPTUAL SCHEMA FOR A DATABASE APPLICATION • APPLICATIONS DESIGN FOCUSES ON THE PROGRAMS AND INTERFACES THAT ACCESS THE DATABASE • GENERALLY CONSIDERED PART OF SOFTWARE ENGINEERING Adapted from Fundamentals of Database Systems (Elmasri and Navathe) OVERVIEW OF DATABASE DESIGN PROCESS Adapted from Fundamentals of Database Systems (Elmasri and Navathe) METHODOLOGIES FOR CONCEPTUAL DESIGN • ENTITY RELATIONSHIP (ER) DIAGRAMS • ENHANCED ENTITY RELATIONSHIP (EER) DIAGRAMS • USE OF DESIGN TOOLS IN INDUSTRY FOR DESIGNING AND DOCUMENTING LARGE SCALE DESIGNS • THE UML (UNIFIED MODELING LANGUAGE) CLASS DIAGRAMS ARE POPULAR IN INDUSTRY TO DOCUMENT CONCEPTUAL DATABASE DESIGNS Adapted from Fundamentals of Database Systems (Elmasri and Navathe) EXAMPLE COMPANY DATABASE • WE NEED TO CREATE A DATABASE SCHEMA DESIGN BASED ON THE FOLLOWING (SIMPLIFIED) REQUIREMENTS OF THE COMPANY DATABASE: • THE COMPANY IS ORGANIZED INTO DEPARTMENTS. EACH DEPARTMENT HAS A NAME, NUMBER AND AN EMPLOYEE WHO MANAGES THE DEPARTMENT. WE KEEP TRACK OF THE START DATE OF THE DEPARTMENT MANAGER. A DEPARTMENT MAY HAVE SEVERAL LOCATIONS. • EACH DEPARTMENT CONTROLS A NUMBER OF PROJECTS. EACH PROJECT HAS A UNIQUE NAME, UNIQUE NUMBER AND IS LOCATED AT A SINGLE LOCATION. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) EXAMPLE COMPANY DATABASE (CONTINUED) • THE DATABASE WILL STORE EACH EMPLOYEE’S SOCIAL SECURITY NUMBER, ADDRESS, SALARY, SEX, AND BIRTHDATE. • EACH EMPLOYEE WORKS FOR ONE DEPARTMENT BUT MAY WORK ON SEVERAL PROJECTS. • THE DB WILL KEEP TRACK OF THE NUMBER OF HOURS PER WEEK THAT AN EMPLOYEE CURRENTLY WORKS ON EACH PROJECT. • IT IS REQUIRED TO KEEP TRACK OF THE DIRECT SUPERVISOR OF EACH EMPLOYEE. • EACH EMPLOYEE MAY HAVE A NUMBER OF DEPENDENTS. • FOR EACH DEPENDENT, THE DB KEEPS A RECORD OF NAME, SEX, BIRTHDATE, AND RELATIONSHIP TO THE EMPLOYEE. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ER MODEL CONCEPTS • ENTITIES AND ATTRIBUTES • ENTITY IS A BASIC CONCEPT FOR THE ER MODEL. ENTITIES ARE SPECIFIC THINGS OR OBJECTS IN THE MINI-WORLD THAT ARE REPRESENTED IN THE DATABASE. E.G. THE EMPLOYEE JOHN SMITH, THE RESEARCH DEPARTMENT, THE PRODUCTX PROJECT • ATTRIBUTES ARE PROPERTIES USED TO DESCRIBE AN ENTITY. • E.G. AN EMPLOYEE ENTITY MAY HAVE THE ATTRIBUTES NAME, SSN, ADDRESS, SEX, BIRTHDATE • A SPECIFIC ENTITY WILL HAVE A VALUE FOR EACH OF ITS ATTRIBUTES. • E.G. A SPECIFIC EMPLOYEE ENTITY MAY HAVE NAME='JOHN SMITH', SSN='123456789', ADDRESS ='731, FONDREN, HOUSTON, TX', SEX='M', BIRTHDATE='09-JAN-55‘ • EACH ATTRIBUTE HAS A VALUE SET (OR DATA TYPE) ASSOCIATED WITH IT – E.G. INTEGER, STRING, DATE, ENUMERATED TYPE, … Adapted from Fundamentals of Database Systems (Elmasri and Navathe) TYPES OF ATTRIBUTES (1) • SIMPLE • EACH ENTITY HAS A SINGLE ATOMIC VALUE FOR THE ATTRIBUTE. FOR EXAMPLE, SSN OR SEX. • COMPOSITE • THE ATTRIBUTE MAY BE COMPOSED OF SEVERAL COMPONENTS. FOR EXAMPLE: • ADDRESS(APT#, HOUSE#, STREET, CITY, STATE, ZIPCODE, COUNTRY), OR • NAME(FIRSTNAME, MIDDLENAME, LASTNAME). • COMPOSITION MAY FORM A HIERARCHY WHERE SOME COMPONENTS ARE THEMSELVES COMPOSITE. • MULTI-VALUED • AN ENTITY MAY HAVE MULTIPLE VALUES FOR THAT ATTRIBUTE. FOR EXAMPLE, COLOR OF A CAR OR PREVIOUS DEGREES OF A STUDENT. • DENOTED AS {COLOR} OR {PREVIOUSDEGREES}. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) TYPES OF ATTRIBUTES (2) • IN GENERAL, COMPOSITE AND MULTI-VALUED ATTRIBUTES MAY BE NESTED ARBITRARILY TO ANY NUMBER OF LEVELS, ALTHOUGH THIS IS RARE. • FOR EXAMPLE, PREVIOUSDEGREES OF A STUDENT IS A COMPOSITE MULTI-VALUED ATTRIBUTE DENOTED BY {PREVIOUSDEGREES (COLLEGE, YEAR, DEGREE, FIELD)} • MULTIPLE PREVIOUSDEGREES VALUES CAN EXIST • EACH HAS FOUR SUBCOMPONENT ATTRIBUTES: • COLLEGE, YEAR, DEGREE, FIELD Adapted from Fundamentals of Database Systems (Elmasri and Navathe) EXAMPLE OF A COMPOSITE ATTRIBUTE Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ENTITY TYPES AND KEY ATTRIBUTES (1) • ENTITIES WITH THE SAME BASIC ATTRIBUTES ARE GROUPED OR TYPED INTO AN ENTITY TYPE. • FOR EXAMPLE, THE ENTITY TYPE EMPLOYEE AND PROJECT. • AN ATTRIBUTE OF AN ENTITY TYPE FOR WHICH EACH ENTITY MUST HAVE A UNIQUE VALUE IS CALLED A KEY ATTRIBUTE OF THE ENTITY TYPE. • FOR EXAMPLE, SSN OF EMPLOYEE. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ENTITY TYPES AND KEY ATTRIBUTES (2) • A KEY ATTRIBUTE MAY BE COMPOSITE. • VEHICLETAGNUMBER IS A KEY OF THE CAR ENTITY TYPE WITH COMPONENTS (NUMBER, STATE). • AN ENTITY TYPE MAY HAVE MORE THAN ONE KEY. • THE CAR ENTITY TYPE MAY HAVE TWO KEYS: • VEHICLEIDENTIFICATIONNUMBER (POPULARLY CALLED VIN) • VEHICLETAGNUMBER (NUMBER, STATE), AKA LICENSE PLATE NUMBER. • EACH KEY IS UNDERLINED (NOTE: THIS IS DIFFERENT FROM THE RELATIONAL SCHEMA WHERE ONLY ONE “PRIMARY KEY IS UNDERLINED). Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ENTITY SET • EACH ENTITY TYPE WILL HAVE A COLLECTION OF ENTITIES STORED IN THE DATABASE • CALLED THE ENTITY SET OR SOMETIMES ENTITY COLLECTION • PREVIOUS SLIDE SHOWS THREE CAR ENTITY INSTANCES IN THE ENTITY SET FOR CAR • SAME NAME (CAR) USED TO REFER TO BOTH THE ENTITY TYPE AND THE ENTITY SET • HOWEVER, ENTITY TYPE AND ENTITY SET MAY BE GIVEN DIFFERENT NAMES • ENTITY SET IS THE CURRENT STATE OF THE ENTITIES OF THAT TYPE THAT ARE STORED IN THE DATABASE Adapted from Fundamentals of Database Systems (Elmasri and Navathe) VALUE SETS (DOMAINS) OF ATTRIBUTES • EACH SIMPLE ATTRIBUTE IS ASSOCIATED WITH A VALUE SET • E.G., LASTNAME HAS A VALUE WHICH IS A CHARACTER STRING OF UPTO 15 CHARACTERS, SAY • DATE HAS A VALUE CONSISTING OF MM-DD-YYYY WHERE EACH LETTER IS AN INTEGER • A VALUE SET SPECIFIES THE SET OF VALUES ASSOCIATED WITH AN ATTRIBUTE Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ATTRIBUTES AND VALUE SETS • VALUE SETS ARE SIMILAR TO DATA TYPES IN MOST PROGRAMMING LANGUAGES – E.G., INTEGER, CHARACTER (N), REAL, BIT • MATHEMATICALLY, AN ATTRIBUTE A FOR AN ENTITY TYPE E WHOSE VALUE SET IS V IS DEFINED AS A FUNCTION A : E -> P(V) WHERE P(V) INDICATES A POWER SET (WHICH MEANS ALL POSSIBLE SUBSETS) OF V. THE ABOVE DEFINITION COVERS SIMPLE AND MULTIVALUED ATTRIBUTES. • WE REFER TO THE VALUE OF ATTRIBUTE A FOR ENTITY E AS A(E). Adapted from Fundamentals of Database Systems (Elmasri and Navathe) DISPLAYING AN ENTITY TYPE • IN ER DIAGRAMS, AN ENTITY TYPE IS DISPLAYED IN A RECTANGULAR BOX • ATTRIBUTES ARE DISPLAYED IN OVALS • EACH ATTRIBUTE IS CONNECTED TO ITS ENTITY TYPE • COMPONENTS OF A COMPOSITE ATTRIBUTE ARE CONNECTED TO THE OVAL REPRESENTING THE COMPOSITE ATTRIBUTE • EACH KEY ATTRIBUTE IS UNDERLINED • MULTIVALUED ATTRIBUTES DISPLAYED IN DOUBLE OVALS Adapted from Fundamentals of Database Systems (Elmasri and Navathe) NOTATION FOR ER DIAGRAMS Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ENTITY TYPE CAR WITH TWO KEYS AND A CORRESPONDING ENTITY SET Adapted from Fundamentals of Database Systems (Elmasri and Navathe) INITIAL CONCEPTUAL DESIGN OF ENTITY TYPES FOR THE COMPANY DATABASE SCHEMA • BASED ON THE REQUIREMENTS, WE CAN IDENTIFY FOUR INITIAL ENTITY TYPES IN THE COMPANY DATABASE: • DEPARTMENT • PROJECT • EMPLOYEE • DEPENDENT • THE INITIAL ATTRIBUTES SHOWN ARE DERIVED FROM THE REQUIREMENTS DESCRIPTION Adapted from Fundamentals of Database Systems (Elmasri and Navathe) INITIAL DESIGN OF ENTITY TYPES: EMPLOYEE, DEPARTMENT, PROJECT, DEPENDENT Adapted from Fundamentals of Database Systems (Elmasri and Navathe) REFINING THE INITIAL DESIGN BY INTRODUCING RELATIONSHIPS • THE INITIAL DESIGN IS TYPICALLY NOT COMPLETE • SOME ASPECTS IN THE REQUIREMENTS WILL BE REPRESENTED AS RELATIONSHIPS • ER MODEL HAS THREE MAIN CONCEPTS: • ENTITIES (AND THEIR ENTITY TYPES AND ENTITY SETS) • ATTRIBUTES (SIMPLE, COMPOSITE, MULTIVALUED) • RELATIONSHIPS (AND THEIR RELATIONSHIP TYPES AND RELATIONSHIP SETS) Adapted from Fundamentals of Database Systems (Elmasri and Navathe) RELATIONSHIPS AND RELATIONSHIP TYPES (1) • A RELATIONSHIP RELATES TWO OR MORE DISTINCT ENTITIES WITH A SPECIFIC MEANING. • FOR EXAMPLE, EMPLOYEE JOHN SMITH WORKS ON THE PRODUCTX PROJECT, OR EMPLOYEE FRANKLIN WONG MANAGES THE RESEARCH DEPARTMENT. • RELATIONSHIPS OF THE SAME TYPE ARE GROUPED OR TYPED INTO A RELATIONSHIP TYPE. • FOR EXAMPLE, THE WORKS_ON RELATIONSHIP TYPE IN WHICH EMPLOYEES AND PROJECTS PARTICIPATE, OR THE MANAGES RELATIONSHIP TYPE IN WHICH EMPLOYEES AND DEPARTMENTS PARTICIPATE. • THE DEGREE OF A RELATIONSHIP TYPE IS THE NUMBER OF PARTICIPATING ENTITY TYPES. • BOTH MANAGES AND WORKS_ON ARE BINARY RELATIONSHIPS. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) RELATIONSHIP INSTANCES OF THE WORKS_FOR N:1 RELATIONSHIP BETWEEN EMPLOYEE AND DEPARTMENT Adapted from Fundamentals of Database Systems (Elmasri and Navathe) RELATIONSHIP INSTANCES OF THE M:N WORKS_ON RELATIONSHIP BETWEEN EMPLOYEE AND PROJECT Adapted from Fundamentals of Database Systems (Elmasri and Navathe) RELATIONSHIP TYPE VS. RELATIONSHIP SET (1) • RELATIONSHIP TYPE: • IS THE SCHEMA DESCRIPTION OF A RELATIONSHIP • IDENTIFIES THE RELATIONSHIP NAME AND THE PARTICIPATING ENTITY TYPES • ALSO IDENTIFIES CERTAIN RELATIONSHIP CONSTRAINTS • RELATIONSHIP SET: • THE CURRENT SET OF RELATIONSHIP INSTANCES REPRESENTED IN THE DATABASE • THE CURRENT STATE OF A RELATIONSHIP TYPE Adapted from Fundamentals of Database Systems (Elmasri and Navathe) RELATIONSHIP TYPE VS. RELATIONSHIP SET (2) • PREVIOUS FIGURES DISPLAYED THE RELATIONSHIP SETS • EACH INSTANCE IN THE SET RELATES INDIVIDUAL PARTICIPATING ENTITIES – ONE FROM EACH PARTICIPATING ENTITY TYPE • IN ER DIAGRAMS, WE REPRESENT THE RELATIONSHIP TYPE AS FOLLOWS: • DIAMOND-SHAPED BOX IS USED TO DISPLAY A RELATIONSHIP TYPE • CONNECTED TO THE PARTICIPATING ENTITY TYPES VIA STRAIGHT LINES • NOTE THAT THE RELATIONSHIP TYPE IS NOT SHOWN WITH AN ARROW. THE NAME SHOULD BE TYPICALLY BE READABLE FROM LEFT TO RIGHT AND TOP TO BOTTOM. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) REFINING THE COMPANY DATABASE SCHEMA BY INTRODUCING RELATIONSHIPS • BY EXAMINING THE REQUIREMENTS, SIX RELATIONSHIP TYPES ARE IDENTIFIED • ALL ARE BINARY RELATIONSHIPS( DEGREE 2) • LISTED BELOW WITH THEIR PARTICIPATING ENTITY TYPES: • WORKS_FOR (BETWEEN EMPLOYEE, DEPARTMENT) • MANAGES (ALSO BETWEEN EMPLOYEE, DEPARTMENT) • CONTROLS (BETWEEN DEPARTMENT, PROJECT) • WORKS_ON (BETWEEN EMPLOYEE, PROJECT) • SUPERVISION (BETWEEN EMPLOYEE (AS SUBORDINATE), EMPLOYEE (AS SUPERVISOR)) • DEPENDENTS_OF (BETWEEN EMPLOYEE, DEPENDENT) Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ER DIAGRAM – RELATIONSHIP TYPES ARE: WORKS_FOR, MANAGES, WORKS_ON, CONTROLS, SUPERVISION, DEPENDENTS_OF Adapted from Fundamentals of Database Systems (Elmasri and Navathe) CONSTRAINTS ON RELATIONSHIPS • CONSTRAINTS ON RELATIONSHIP TYPES • (ALSO KNOWN AS RATIO CONSTRAINTS) • CARDINALITY RATIO (SPECIFIES MAXIMUM PARTICIPATION) • ONE-TO-ONE (1:1) • ONE-TO-MANY (1:N) OR MANY-TO-ONE (N:1) • MANY-TO-MANY (M:N) • EXISTENCE DEPENDENCY CONSTRAINT (SPECIFIES MINIMUM PARTICIPATION) (ALSO CALLED PARTICIPATION CONSTRAINT) • ZERO (OPTIONAL PARTICIPATION, NOT EXISTENCE-DEPENDENT) • ONE OR MORE (MANDATORY PARTICIPATION, EXISTENCE- DEPENDENT) Adapted from Fundamentals of Database Systems (Elmasri and Navathe) MANY-TO-ONE (N:1) RELATIONSHIP Adapted from Fundamentals of Database Systems (Elmasri and Navathe) MANY-TO-MANY (M:N) RELATIONSHIP Adapted from Fundamentals of Database Systems (Elmasri and Navathe) RECURSIVE RELATIONSHIP TYPE • A RELATIONSHIP TYPE BETWEEN THE SAME PARTICIPATING ENTITY TYPE IN DISTINCT ROLES • ALSO CALLED A SELF-REFERENCING RELATIONSHIP TYPE. • EXAMPLE: THE SUPERVISION RELATIONSHIP • EMPLOYEE PARTICIPATES TWICE IN TWO DISTINCT ROLES: • SUPERVISOR (OR BOSS) ROLE • SUPERVISEE (OR SUBORDINATE) ROLE • EACH RELATIONSHIP INSTANCE RELATES TWO DISTINCT EMPLOYEE ENTITIES: • ONE EMPLOYEE IN SUPERVISOR ROLE • ONE EMPLOYEE IN SUPERVISEE ROLE Adapted from Fundamentals of Database Systems (Elmasri and Navathe) DISPLAYING A RECURSIVE RELATIONSHIP • IN A RECURSIVE RELATIONSHIP TYPE. • BOTH PARTICIPATIONS ARE SAME ENTITY TYPE IN DIFFERENT ROLES. • FOR EXAMPLE, SUPERVISION RELATIONSHIPS BETWEEN EMPLOYEE (IN ROLE OF SUPERVISOR OR BOSS) AND (ANOTHER) EMPLOYEE (IN ROLE OF SUBORDINATE OR WORKER). • IN FOLLOWING FIGURE, FIRST ROLE PARTICIPATION LABELED WITH 1 AND SECOND ROLE PARTICIPATION LABELED WITH 2. • IN ER DIAGRAM, NEED TO DISPLAY ROLE NAMES TO DISTINGUISH PARTICIPATIONS. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) A RECURSIVE RELATIONSHIP SUPERVISION` Adapted from Fundamentals of Database Systems (Elmasri and Navathe) WEAK ENTITY TYPES • AN ENTITY THAT DOES NOT HAVE A KEY ATTRIBUTE AND THAT IS IDENTIFICATION-DEPENDENT ON ANOTHER ENTITY TYPE. • A WEAK ENTITY MUST PARTICIPATE IN AN IDENTIFYING RELATIONSHIP TYPE WITH AN OWNER OR IDENTIFYING ENTITY TYPE • ENTITIES ARE IDENTIFIED BY THE COMBINATION OF: • A PARTIAL KEY OF THE WEAK ENTITY TYPE • THE PARTICULAR ENTITY THEY ARE RELATED TO IN THE IDENTIFYING RELATIONSHIP TYPE • EXAMPLE: • A DEPENDENT ENTITY IS IDENTIFIED BY THE DEPENDENT’S FIRST NAME, AND THE SPECIFIC EMPLOYEE WITH WHOM THE DEPENDENT IS RELATED • NAME OF DEPENDENT IS THE PARTIAL KEY • DEPENDENT IS A WEAK ENTITY TYPE • EMPLOYEE IS ITS IDENTIFYING ENTITY TYPE VIA THE IDENTIFYING RELATIONSHIP TYPE DEPENDENT_OF Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ATTRIBUTES OF RELATIONSHIP TYPES • A RELATIONSHIP TYPE CAN HAVE ATTRIBUTES: • FOR EXAMPLE, HOURSPERWEEK OF WORKS_ON • ITS VALUE FOR EACH RELATIONSHIP INSTANCE DESCRIBES THE NUMBER OF HOURS PER WEEK THAT AN EMPLOYEE WORKS ON A PROJECT. • A VALUE OF HOURSPERWEEK DEPENDS ON A PARTICULAR (EMPLOYEE, PROJECT) COMBINATION • MOST RELATIONSHIP ATTRIBUTES ARE USED WITH M:N RELATIONSHIPS • IN 1:N RELATIONSHIPS, THEY CAN BE TRANSFERRED TO THE ENTITY TYPE ON THE N-SIDE OF THE RELATIONSHIP Adapted from Fundamentals of Database Systems (Elmasri and Navathe) EXAMPLE ATTRIBUTE OF A RELATIONSHIP TYPE: HOURS OF WORKS_ON Adapted from Fundamentals of Database Systems (Elmasri and Navathe) NOTATION FOR CONSTRAINTS ON RELATIONSHIPS • CARDINALITY RATIO (OF A BINARY RELATIONSHIP): 1:1, 1:N, N:1, OR M:N • SHOWN BY PLACING APPROPRIATE NUMBERS ON THE RELATIONSHIP EDGES. • PARTICIPATION CONSTRAINT (ON EACH PARTICIPATING ENTITY TYPE): TOTAL (CALLED EXISTENCE DEPENDENCY) OR PARTIAL. • TOTAL SHOWN BY DOUBLE LINE, PARTIAL BY SINGLE LINE. • NOTE: THESE ARE EASY TO SPECIFY FOR BINARY RELATIONSHIP TYPES. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) THE (MIN,MAX) NOTATION FOR RELATIONSHIP CONSTRAINTS Read the min,max numbers next to the entity type and looking away from the entity type Adapted from Fundamentals of Database Systems (Elmasri and Navathe) COMPANY ER SCHEMA DIAGRAM USING (MIN, MAX) NOTATION Adapted from Fundamentals of Database Systems (Elmasri and Navathe) SUMMARY OF NOTATION FOR ER DIAGRAMS Adapted from Fundamentals of Database Systems (Elmasri and Navathe) RELATIONSHIPS OF HIGHER DEGREE • RELATIONSHIP TYPES OF DEGREE 2 ARE CALLED BINARY • RELATIONSHIP TYPES OF DEGREE 3 ARE CALLED TERNARY AND OF DEGREE N ARE CALLED N-ARY • IN GENERAL, AN N-ARY RELATIONSHIP IS NOT EQUIVALENT TO N BINARY RELATIONSHIPS • CONSTRAINTS ARE HARDER TO SPECIFY FOR HIGHER-DEGREE RELATIONSHIPS (N > 2) THAN FOR BINARY RELATIONSHIPS Adapted from Fundamentals of Database Systems (Elmasri and Navathe) DISCUSSION OF N-ARY RELATIONSHIPS (N > 2) • IN GENERAL, 3 BINARY RELATIONSHIPS CAN REPRESENT DIFFERENT INFORMATION THAN A SINGLE TERNARY RELATIONSHIP (SEE FIGURE 3.17A AND B ON NEXT SLIDE) • IF NEEDED, THE BINARY AND N-ARY RELATIONSHIPS CAN ALL BE INCLUDED IN THE SCHEMA DESIGN (SEE FIGURE 3.17A AND B, WHERE ALL RELATIONSHIPS CONVEY DIFFERENT MEANINGS) • IN SOME CASES, A TERNARY RELATIONSHIP CAN BE REPRESENTED AS A WEAK ENTITY IF THE DATA MODEL ALLOWS A WEAK ENTITY TYPE TO HAVE MULTIPLE IDENTIFYING RELATIONSHIPS (AND HENCE MULTIPLE OWNER ENTITY TYPES) (SEE FIGURE 3.17C) Adapted from Fundamentals of Database Systems (Elmasri and Navathe) EXAMPLE OF A TERNARY RELATIONSHIP Adapted from Fundamentals of Database Systems (Elmasri and Navathe) DISCUSSION OF N-ARY RELATIONSHIPS (N > 2) • IF A PARTICULAR BINARY RELATIONSHIP CAN BE DERIVED FROM A HIGHER-DEGREE RELATIONSHIP AT ALL TIMES, THEN IT IS REDUNDANT • FOR EXAMPLE, THE TAUGHT_DURING BINARY RELATIONSHIP IN FIGURE 3.18 (SEE NEXT SLIDE) CAN BE DERIVED FROM THE TERNARY RELATIONSHIP OFFERS (BASED ON THE MEANING OF THE RELATIONSHIPS) Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ANOTHER EXAMPLE OF A TERNARY RELATIONSHIP Adapted from Fundamentals of Database Systems (Elmasri and Navathe) ANOTHER EXAMPLE: A UNIVERSITY DATABASE • TO KEEP TRACK OF THE ENROLLMENTS IN CLASSES AND STUDENT GRADES, ANOTHER DATABASE IS TO BE DESIGNED. • IT KEEPS TRACK OF THE COLLEGES, DEPARTMENTS WITHIN EACH COLLEGE, THE COURSES OFFERED BY DEPARTMENTS, AND SECTIONS OF COURSES, INSTRUCTORS WHO TEACH THE SECTIONS ETC. Adapted from Fundamentals of Database Systems (Elmasri and Navathe) UNIVERSITY DATABASE CONCEPTUAL SCHEMA Adapted from Fundamentals of Database Systems (Elmasri and Navathe) This Photo by Unknown Author is licensed under CC BY Adapted from Fundamentals of Database Systems (Elmasri and Navathe)","libVersion":"0.2.2","langs":""}